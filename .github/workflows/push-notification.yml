name: Deploy Push Notification to AWS Lambda

on:
  push:
    branches:
      - main
    paths:
      - "push-notification/**"

permissions:
  contents: write
  deployments: write

jobs:
  install-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Dependencies
        run: |
          cd push-notification
          npm ci

      - name: Build the Project
        run: |
          cd push-notification
          npm run build

      - name: Zip the Files
        run: |
          cd push-notification
          (cd dist && zip -r ../push-notification.zip .) && zip -ur push-notification.zip node_modules package.json

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lambda-package
          path: push-notification/push-notification.zip

  deploy:
    runs-on: ubuntu-latest
    needs: install-and-build

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: lambda-package
          path: push-notification

      - name: Move ZIP file to root
        run: mv push-notification/push-notification.zip push-notification.zip

      - name: Deploy to AWS Lambda
        uses: docker://amazon/aws-cli
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        with:
          entrypoint: /usr/local/bin/aws
          args: >-
            lambda update-function-code
            --function-name HogoshaPushNotification
            --zip-file fileb://push-notification.zip

      - name: Notify GitHub of Deployment Status
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const deployment = await github.rest.repos.createDeployment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: context.sha,
                environment: 'push-notification',
                required_contexts: [],
                auto_merge: false
              });

              await github.rest.repos.createDeploymentStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.data.id,
                state: 'success'
              });
            } catch (error) {
              console.log("Failed to notify GitHub of deployment status");
              console.log(error);
            }
